@model X.PagedList.IPagedList<Posts>
@using X.PagedList.Mvc.Core;
@{
    ViewData["Title"] = "Quản Lý Bài Viết";
}


<div class="row">
    <div class="col-md-6" style="padding: 20px;">
        <span style="font-size:18px;font-weight:800">List Post</span>
    </div>
    
    <div class="col-md-12">
        <div class="col-md-4">
            <form method="get">
                <div class="form-group" style="display:flex">
                    <input type="text" name="searchString" class="form-control" placeholder="Search post...">
                    <button type="submit" class="btn btn-primary">Search</button>
                </div>

            </form>
        </div>
        <table class="table table-bordered table-hover table-responsive ">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Post</th>
                    <th>Total Like</th>
                    <th>Totla Comment</th>
                    <th>Status</th>
                    <th>CreateAt</th>
                    <th>Option</th>
                </tr>
            </thead>
            <tbody>
                @for (var i = 0; i < Model.Count; i++)
                {
                    var post = Model[i];
                    <tr>
                        <td>@(i + 1)</td>
                        <td width="180px" style=" white-space: nowrap; overflow: hidden; text-overflow: ellipsis; " title="@post.Post">
                            @if (post.Post != null)
                            {
                                @(post.Post.Length>70 ? post.Post.Substring(0, 70) + "..." : post.Post)

                            }
                        </td>
                        <td>@post.Likes.Length <i class="fa-regular fa-thumbs-up"></i></td> <!-- Display total likes -->
                        <td>@post.Comments.Length <i class="fa-regular fa-comments"></i></td>
                        @if (post.Status)
                        {
                            <td><label class="badge badge-success">Active</label></td>
                        }
                        else
                        {
                            <td><label class="badge badge-danger">Inactivity</label></td>
                        }

                        <td>@post.CreatedAt</td>
                        <td>
                            <a style="color:black" href="@Url.Action("Detail", "Post", new { idPost = post.Id })"> <i class="fa-solid fa-circle-info"></i></a> |
                            @if (post.Status)
                            {
                                <a class="BanPost" style="color:black" data-IdPost="@post.Id" href="#"><i class="fa-solid fa-ban"></i></a>
                            }else{
                                <a class="UnlockPost" style="color:black" data-IdPostUnlock="@post.Id" href="#"><i class="fa-solid fa-unlock"></i></a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="pagination-container" style="margin-top:15px">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
            new PagedListRenderOptions
            {
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" }
            }

            )
        </div>
    </div>
</div>


@section Scripts{
    <script>
        $(document).ready(function () {
            $(".BanPost").click(function () {
                var postId = $(this).data('idpost');
                Swal.fire({
                    title: 'Are you sure you want to block this post?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes !'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'POST',
                            url: '/Post/DeletePost',
                            data: { postId: postId },
                            success: function (result) {

                                setTimeout(function () {
                                    window.location.reload();
                                }, 1000);
                                Swal.fire({
                                    position: 'top-end',
                                    icon: 'success',
                                    title: 'Post blocked successfully !',
                                    showConfirmButton: false,
                                    timer: 2000
                                })
                            },
                            error: function (xhr, status, error) {
                                alert('Error: ' + error);
                            }
                        });
                    }
                })
            })
        });



        $(document).ready(function () {
            $(".UnlockPost").click(function () {
                var idPost = $(this).data('idpostunlock');
                Swal.fire({
                    title: 'Are you sure?',
                    text: "Are you sure you want to unlock this post ?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // User clicked "Yes," perform the AJAX request
                        $.ajax({
                            type: 'POST',
                            url: '/Post/UnlockPost',
                            data: { idPost: idPost },
                            success: function (result) {

                                setTimeout(function () {
                                    window.location.reload();
                                }, 1000);
                                Swal.fire({
                                    position: 'top-end',
                                    icon: 'success',
                                    title: 'This post has been unblocked !',
                                    showConfirmButton: false,
                                    timer: 2000
                                })
                            },
                            error: function (xhr, status, error) {
                                alert('Error: ' + error);
                            }
                        });
                    }
                });
            });
        });
    </script>
}
